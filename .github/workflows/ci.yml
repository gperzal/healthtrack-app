name: 🚀 HealthTrack CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ================================
  # 1. BUILD & UNIT TESTS (JUnit)
  # ================================
  build_and_unit_tests:
    name: 🔹 Build & Unit Tests (JUnit)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Build project & Run unit tests
        run: mvn clean install test

  # ==================================
  # 2. FUNCTIONAL TESTS (Selenium)
  # ==================================
  functional_tests_selenium:
    name: 🔹 Functional Tests (Selenium)
    runs-on: ubuntu-latest
    needs: build_and_unit_tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🌐 Install Chrome (headless)
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
          export CHROME_BIN=/usr/bin/chromium-browser

      - name: 🧪 Run Selenium UI Tests
        run: mvn test -Dtest=UserUITest

  # ==================================
  # 3. PERFORMANCE TESTS (JMeter)
  # ==================================
  performance_tests_jmeter:
    name: 🔹 Performance Tests (JMeter)
    runs-on: ubuntu-latest
    needs: build_and_unit_tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔬 Run JMeter Test via Docker Compose
        run: |
          docker compose up --build --abort-on-container-exit

      - name: 📤 Upload JMeter HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-html-report
          path: jmeter/report

      - name: 📤 Upload raw .jtl results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-raw-results
          path: jmeter/resultados.jtl

  # ==================================
  # 4. CODE QUALITY (SonarQube)
  # ==================================
  code_quality_sonarqube:
    name: 🔹 Code Quality (SonarQube)
    runs-on: ubuntu-latest
    needs: build_and_unit_tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🔍 Run SonarQube Scan
        run: mvn sonar:sonar \
          -Dsonar.projectKey=healthtrack-app \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
