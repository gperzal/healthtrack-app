name: 🚀 HealthTrack CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ================================
  # 1. BUILD & UNIT TESTS (JUnit)
  # ================================
  build_and_unit_tests:
    name: 🔹 Build & Unit Tests (JUnit)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Build project & Run unit tests
        run: mvn clean install test

      - name: 📤 Upload build artifact (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: healthtrack-app-jar
          path: target/healthtrack-app-*.jar
  # ==================================
  # 2. FUNCTIONAL TESTS (Selenium)
  # ==================================
  functional_tests_selenium:
    name: 🔹 Functional Tests (Selenium)
    runs-on: ubuntu-latest
    needs: build_and_unit_tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🌐 Install Chrome & Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable chromium-chromedriver
          which google-chrome
          which chromedriver

      - name: 🧪 Run Selenium UI Tests
        env:
          CHROME_BIN: /usr/bin/google-chrome
        run: mvn test -Pui-tests

  # ==================================
  # 3. PERFORMANCE TESTS (JMeter)
  # ==================================
  performance_tests_jmeter:
    name: 🔹 Performance Tests (JMeter)
    runs-on: ubuntu-latest
    needs: build_and_unit_tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Install JMeter
        run: |
          sudo apt-get update
          sudo apt-get install -y jmeter

      - name: 🔬 Run JMeter Load Test
        working-directory: jmeter
        run: |
          mkdir -p results
          jmeter -n -t performance_test.jmx -l results/result.jtl -e -o results/report

      - name: 📤 Upload JMeter HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-html-report
          path: results/report

      - name: 📤 Upload raw .jtl results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-raw-results
          path: results/result.jtl

  # ==================================
  # 4. CODE QUALITY (SonarCloud)
  # ==================================
  code_quality_sonarcloud:
    name: 🔹 Code Quality Analysis (SonarCloud)
    runs-on: ubuntu-latest
    needs: build_and_unit_tests

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 🛠️ Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 📦 Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🔍 Run SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean verify sonar:sonar
